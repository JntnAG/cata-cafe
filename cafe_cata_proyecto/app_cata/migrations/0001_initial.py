# Generated by Django 5.2.4 on 2025-08-03 13:53

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=50)),
                ("identificacion", models.CharField(max_length=20)),
                ("matricula_cafe", models.CharField(max_length=10)),
                (
                    "tueste",
                    models.CharField(
                        choices=[
                            ("claro", "Claro"),
                            ("medio", "Medio"),
                            ("medio_oscuro", "Medio Oscuro"),
                            ("oscuro", "Oscuro"),
                        ],
                        default="medio",
                        max_length=15,
                    ),
                ),
                (
                    "fraganciaAroma",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "sabor",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "residual",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "acidez",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "cuerpo",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "balance",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "puntaje_catador",
                    models.FloatField(
                        help_text="Valor entre 6.00 y 10.00 en incrementos de 0.25",
                        validators=[
                            django.core.validators.MinValueValidator(6.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "intensidad_fragancia",
                    models.IntegerField(
                        help_text="Intensidad de 1 a 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "intensidad_aroma",
                    models.IntegerField(
                        help_text="Intensidad de 1 a 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "intensidad_acidez",
                    models.IntegerField(
                        help_text="Intensidad de 1 a 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "intensidad_cuerpo",
                    models.IntegerField(
                        help_text="Intensidad de 1 a 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "uniformidad",
                    models.IntegerField(
                        help_text="Número de checkboxes marcados (0-5)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "taza_limpia",
                    models.IntegerField(
                        help_text="Número de checkboxes marcados (0-5)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "dulzura",
                    models.IntegerField(
                        help_text="Número de checkboxes marcados (0-5)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "tazas",
                    models.IntegerField(
                        help_text="Número de tazas (1-10)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "defectos_ligero",
                    models.IntegerField(
                        default=0,
                        help_text="Cantidad de defectos ligeros (cada uno resta 2 puntos)",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "defectos_rechazo",
                    models.IntegerField(
                        default=0,
                        help_text="Cantidad de defectos de rechazo (cada uno resta 4 puntos)",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("puntaje_catador_final", models.FloatField(editable=False)),
                ("puntuacion_total", models.FloatField(editable=False)),
                ("observaciones", models.TextField(blank=True)),
                ("fecha", models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
